# vim:ft=tmux:cc=79

# Disclaimer: following config is adapted for Dvorak layout
# https://github.com/vbauerster/PDvorak

# Cool arcticles about tmux:
# https://github.com/tmux/tmux/blob/master/FAQ
# https://robots.thoughtbot.com/love-hate-tmux
# https://gist.github.com/MohamedAlaa/2961058
# https://github.com/tmux-plugins/tmux-sensible
# https://github.com/tmux-plugins/tmux-pain-control
# https://learnxinyminutes.com/docs/tmux

# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# TMUX_VERSION
# -------------------------------------------------------------------
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | awk '{ print $2 }')"

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# ~/dotfiles/resources/screen-256color.terminfo
set-option -g default-terminal "screen-256color"

# Add truecolor support (tmux info | rg Tc)
# https://wiki.archlinux.org/index.php/Tmux#24-bit_color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# <S-Home><S-End>
# set-option -ga terminal-overrides ',xterm-256color:kEND=\E[F:kHOM=\E[H'

# Use xterm keycodes for Shift-F1 etc (for Vim).
# https://wiki.archlinux.org/index.php/Tmux#xterm-keys
set-option -g xterm-keys on

# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/8
source-file -q ~/.tmux-osx.conf

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 0

# increase scrollback buffer size
set-option -g history-limit 30000

# tmux messages are displayed for 3 seconds
set-option -g display-time 3000

set-option -g display-panes-time 3000

# Update the status line every interval seconds
# devault value is 15
# set-option -g status-interval 10

# unbind-key C-b (the default prefix)
unbind-key C-b
# C-b is not acceptable as a prefix, neither C-a, because both are used by Vim
# http://superuser.com/a/178223/578741
set-option -g prefix C-Space

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set-option -g status-keys emacs

# requires by 'roxma/vim-tmux-clipboard'
# focus events enabled for terminals that support them
set-option -g focus-events on

# start window numbers at 1 to match keyboard order with tmux window order
set-option -g base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# increase scrollback lines
set-option -g history-limit 10000

# Mouse
set-option -g mouse on

# remove administrative debris (session name, hostname, time) in status bar
# set -g status-left '#{version}'
# set -g status-right '#[bold]#(xkbswitch -ge) ● #H#[default] '
# set-option -g status-right "#(xkbswitch -ge) ● #(date '+%a, %b %d - %H:%M')"
# set-option -g status-right '#{prefix_highlight} | #(xkbswitch -ge) | %a %d-%m-%Y %H:%M'
set -g status-right '#{prefix_highlight}#{cpu_bg_color}#{cpu_fg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
set-window-option -g mode-keys vi

set-window-option -g pane-base-index 1

# super useful when using "grouped sessions" and multi-monitor setup
set-window-option -g aggressive-resize on

# visual notification of activity in other windows
set-window-option -g monitor-activity on
# set -g visual-activity on

# auto rename
# set-window-option -g automatic-rename on
# https://unix.stackexchange.com/questions/235272/format-tmuxs-pane-current-path/393072#393072
# The default  window-status-format is `#I:#W#F'
# set-window-option -g automatic-rename-format "#{b:pane_current_path}"
# set-window-option -g automatic-rename-format "#{=16:pane_title}"
set-window-option -g automatic-rename-format "#{b:pane_title}"

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
bind-key C new-window -c "#{pane_current_path}"

# shortcut for reloading config
bind-key R source-file ~/.tmux.conf \; display-message "[tmux #{version}] reloaded ~/.tmux.conf"

# fzf-locate
# https://github.com/junegunn/fzf/wiki/Examples-(tmux)
# -n is an alias for -T root, means bypass prefix
bind-key -n 'M-g' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# Capture pane and open in nvim
bind-key M-c run 'tmux capture-pane -S -10000 -p > /tmp/tmux-capture.txt' \; new-window "nvim /tmp/tmux-capture.txt"

# Screen capture
bind-key M-s run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

# copy-mode-vi bindings
# https://github.com/tmux/tmux/issues/592
# https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
# v     = rectangle-toggle
# space = begin-selection
# Enter = copy-selection-and-cancel
# C-d   = halfpage-down
# C-u   = halfpage-up
# default: # list-buffers
bind-key '#' copy-mode

is_tmux_modern='expr $TMUX_VERSION \>= 2.4'
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi y send -X copy-selection" "bind -tvi-copy y copy-selection"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi Bspace send -X halfpage-up" "bind -tvi-copy Bspace halfpage-up"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi Tab send -X halfpage-down" "bind -tvi-copy Tab halfpage-down"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi J send -X -N5 cursor-down"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi K send -X -N5 cursor-up"

# Switch to last session
bind-key g switch-client -l
bind-key 1 switch-client -p
bind-key 2 switch-client -n

# default: ( switch-client -p
bind-key ( select-window -t :=1
# default: ) switch-client -n
bind-key ) select-window -t :=2
# default: } swap-pane -D
bind-key } select-window -t :=3
bind-key + select-window -t :=4
# default: { swap-pane -U
bind-key { select-window -t :=5
# default: ] paste-buffer
bind-key ] select-window -t :=6
# default: [ copy-mode
bind-key [ select-window -t :=7
# default: ! break-pane
bind-key ! select-window -t :=8
# default: = choose-buffer
bind-key = select-window -t :=9
bind-key * choose-buffer

# switch to last window
# default: Space next-layout
bind-key Space last-window

# unbind-key &
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window

bind-key \; command-prompt

# Synchronize panes
# https://sanctum.geek.nz/arabesque/sync-tmux-panes/
bind-key 0 set-window-option synchronize-pane

# pane movement
# http://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window
# bind-key j command-prompt -p "join pane from:"  "join-pane -s ':%%'"
# bind-key @ command-prompt -p "send pane to:"  "join-pane -t ':%%'"

# Marked pane must be present (prefix-m), for the following to work
# The marked pane will be used as -s src-pane, whereas -t dst-pane is active pane
bind-key & join-pane

# join the last active pane/window to the current window.
# mnemonic bind
bind-key b join-pane -s !

# Move pane to new Tab(window)
bind-key T break-pane

# swap the last active pane/window with the current window.
# default: r refresh-client
bind-key r swap-pane -s !
bind-key 5 swap-pane -U
bind-key 3 swap-pane -D

# jump between panes
# default: o select-pane -t :.+
bind-key O select-pane -t :.-

# pane_resizing_bindings
# https://github.com/tmux-plugins/tmux-pain-control
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
# default: L switch-client -l
bind-key -r L resize-pane -R 5

# pane_split_bindings
# https://github.com/tmux-plugins/tmux-pain-control/blob/master/screenshots/pane_splitting.gif
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
# default: - delete-buffer
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# window_move_bindings
# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-
bind-key ^ swap-window -t 1

# pane_navigation_bindings
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-c if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-c select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

bind-key -n C-l send-keys "C-c"
# Restoring Clear Screen (C-l)
# mnemonic <C-u> clears line in zsh
bind-key u send-keys C-l

# quick layouts preset
bind-key M-v select-layout even-horizontal
bind-key M-h select-layout even-vertical
bind-key M-t select-layout tiled
# default: q display-panes
bind-key q next-layout
bind-key Q previous-layout

# send prefix key to nested tmux session
# <C-Space><C-Space> (whithout depressing ctrl)
bind-key C-Space if-shell "$is_vim" "send-keys C-Space" "send-prefix"
bind-key a display-panes

# bind-key e send "V" C-m "nvim " \; paste-buffer \; send C-m

# if-shell "[ -f $DOTFILES/.tmuxcolors-256.conf ]" 'source $DOTFILES/.tmuxcolors-256.conf'
# source-file ~/.tmux-gruvbox-${BACKGROUND:-light}.conf
source-file ~/.tmux-theme-${BACKGROUND}.conf

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'thalesmello/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'jbnicolai/tmux-fpp'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
