# improve colors
set -g default-terminal 'screen-256color'

# escape delay
set -sg escape-time 0

# shortcut for reloading config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# act like vim
setw -g mode-keys vi

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# act like GNU screen
# unbind C-b
# set -g prefix C-a

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# Highlight active window
#set-window-option -g window-status-current-bg '#ffffd7'
set-window-option -g window-status-current-fg 'green'

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# status bar color
set -g status-bg 'white'
set -g status-fg '#808080'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
#set -g status-right ''
#set -g status-right '#[fg=green]#H'

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# increase scrollback lines
set -g history-limit 10000

# switch to last pane
bind-key b last-pane

# switch to last window
bind-key C-b last-window

bind-key _ split-window
bind-key | split-window -h

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
