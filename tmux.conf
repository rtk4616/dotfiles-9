# Disclaimer: following config is adapted for Dvorak layout
# https://github.com/vbauerster/DeepDvorak

# Cool arcticles about tmux:
# https://robots.thoughtbot.com/love-hate-tmux
# https://gist.github.com/MohamedAlaa/2961058

# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# ~/dotfiles/resources/tmux-256color.terminfo
set-option -g default-terminal "tmux-256color"
# improve colors
# https://wiki.archlinux.org/index.php/Tmux#24-bit_color
set-option -ga terminal-overrides ",xterm-256color:Tc"
# <S-Home><S-End>
set-option -ga terminal-overrides ',xterm-256color:kEND=\E[F:kHOM=\E[H'
# https://wiki.archlinux.org/index.php/Tmux#xterm-keys
set-option -g xterm-keys on

# provide access to the clipboard for pbpaste, pbcopy
set-option -g default-command "reattach-to-user-namespace -l zsh"

# escape delay
set-option -sg escape-time 1

# Update the status bar every sixty seconds
# devault value is 15
set-option -g status-interval 30

# Unbind C-b (the default prefix)
unbind-key C-b
# C-b is not acceptable as a prefix, neither C-a, because both are used by Vim
# http://superuser.com/a/178223/578741
set-option -g prefix C-Space

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set-option -g status-keys vi

# start window numbers at 1 to match keyboard order with tmux window order
set-option -g base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# increase scrollback lines
set-option -g history-limit 10000

# Mouse
set-option -g mouse on

# remove administrative debris (session name, hostname, time) in status bar
# set -g status-left ''
# set -g status-right '#[bold]#(xkbswitch -ge) ● #H#[default] '
set-option -g status-right "#(xkbswitch -ge) ● #(date '+%a, %b %d - %H:%M')"

# requires by 'roxma/vim-tmux-clipboard'
set-option -g focus-events on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi

set-window-option -g pane-base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# set-window-option -g aggressive-resize on

# visual notification of activity in other windows
set-window-option -g monitor-activity on
# set -g visual-activity on

# auto rename
# set-window-option -g automatic-rename on

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
# bind-key c new-window -c "#{pane_current_path}"

# horizontal split
bind-key % split-window -h -c "#{pane_current_path}"

# vertical split
bind-key '"' split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-
# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key T swap-window -t 1

# shortcut for reloading config
bind-key R source-file ~/.tmux.conf \; display-message "[tmux] reloaded"

# fzf-locate
# https://github.com/junegunn/fzf/wiki/Examples-(tmux)
# -n means binding without prefix
bind-key -n 'M-g' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# Capture pane and open in Vim
bind-key -n 'M-n' run 'tmux capture-pane -S -10000 -p > /tmp/tmux-capture.txt'\;\
             new-window "nvim /tmp/tmux-capture.txt"

# setup 'v' to begin selection as in Vim
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "pbcopy"
bind-key -t vi-copy Space halfpage-down
bind-key -t vi-copy Bspace halfpage-up
# unbind default copy-mode and set it to hyphen
unbind [
bind-key - copy-mode
# unbind default paste-buffer and set it to 'p'
unbind ]
bind-key p paste-buffer

# switch to last window
unbind l
bind-key Space last-window\; refresh-client -S

bind-key h previous-window\; refresh-client -S
unbind n
bind-key u next-window\; refresh-client -S

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-c if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "last-pane"
bind-key -n C-l send-keys 'C-c'

# send prefix key, if not in vim
# <C-Space><C-Space> (whithout depressing ctrl)
bind-key C-Space if-shell "$is_vim" "send-keys C-Space" "send-prefix"

bind-key Escape send-keys C-l

# jump between panes
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

unbind \;
bind-key . last-pane

unbind :
bind-key \; command-prompt

# Synchronize panes
# https://sanctum.geek.nz/arabesque/sync-tmux-panes/
bind-key * set-window-option synchronize-pane

# pane movement
# http://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key @ command-prompt -p "send pane to:"  "join-pane -t '%%'"

# resize panes using PREFIX arrows
bind-key -r Left resize-pane -L 4
bind-key -r Right resize-pane -R 4
bind-key -r Down resize-pane -D 4
bind-key -r Up resize-pane -U 4

bind-key M-h select-layout main-horizontal
bind-key M-v select-layout main-vertical

bind-key e send "V" C-m "nvim " \; paste-buffer \; send C-m

# https://github.com/seebi/tmux-colors-solarized
if-shell "[ -f $DOTFILES/.tmuxcolors-256.conf ]" 'source $DOTFILES/.tmuxcolors-256.conf'
