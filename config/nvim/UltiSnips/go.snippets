snippet map "Map type" i
map[${1:keytype}]${2:valtype}
endsnippet

snippet "(\b[\w\.]+)~" "Type conversion" r
${1:T}(`!p snip.rv = match.group(1)`)$0
endsnippet

snippet "(\b[\w\.]+)~c" "Close channel" r
close(`!p snip.rv = match.group(1)`)$0
endsnippet

snippet "(\b[\w\.]+)~l" "Length" r
len(`!p snip.rv = match.group(1)`)$0
endsnippet

# goroutine anonymous function
snippet gof "go func() { ... }()"
go func(${2:$1 ${3:T}}) {
	${0:${VISUAL}}
}(${1})
endsnippet

# Fmt Println
snippet pl "fmt.Println(...)"
fmt.Println("${1:${VISUAL}}")
endsnippet

# Fmt Printf
snippet pf "fmt.Printf(...)"
fmt.Printf("${1:${VISUAL}}\n", $2)
endsnippet

# implement http.Handler interface
snippet serve "ServeHTTP"
func (${1:receiver} ${2:type}) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	${0:${VISUAL}}
}
endsnippet
